1. Get all the countries from the Asia continent /region using the Filter function:

code - 
// var XMLHttpRequest = require('xhr2');
var  request= new XMLHttpRequest();         //make a http request

request.open('GET','https://restcountries.com/v3.1/all');   //Open your request 

request.onload=function(){                              //onload event (server will listen to request and process data )
    let data =JSON.parse(request.responseText)
    let res= data.filter((d)=>{        //filter region = Asia
        return d.region ==="Asia"
     })
    console.log(res)
}

request.send();             //send the request

Output: 
Array(50) [ {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, … ]
​
0: Object { cca2: "KW", ccn3: "414", cca3: "KWT", … }
​
1: Object { cca2: "AF", ccn3: "004", cca3: "AFG", … }
​
2: Object { cca2: "ID", ccn3: "360", cca3: "IDN", … }
​
3: Object { cca2: "TW", ccn3: "158", cca3: "TWN", … }
​
4: Object { cca2: "TR", ccn3: "792", cca3: "TUR", … }
​
5: Object { cca2: "IL", ccn3: "376", cca3: "ISR", … }
​
6: Object { cca2: "MM", ccn3: "104", cca3: "MMR", … }
​
7: Object { cca2: "JP", ccn3: "392", cca3: "JPN", … }
​
8: Object { cca2: "KG", ccn3: "417", cca3: "KGZ", … }
​
9: Object { cca2: "KH", ccn3: "116", cca3: "KHM", … }
​
10: Object { cca2: "AZ", ccn3: "031", cca3: "AZE", … }
​
11: Object { cca2: "MY", ccn3: "458", cca3: "MYS", … }
​
12: Object { cca2: "BH", ccn3: "048", cca3: "BHR", … }
​
13: Object { cca2: "IN", ccn3: "356", cca3: "IND", … }
​
14: Object { cca2: "KZ", ccn3: "398", cca3: "KAZ", … }
​
15: Object { cca2: "OM", ccn3: "512", cca3: "OMN", … }
​
16: Object { cca2: "AE", ccn3: "784", cca3: "ARE", … }
​
17: Object { cca2: "LK", ccn3: "144", cca3: "LKA", … }
​
18: Object { cca2: "TJ", ccn3: "762", cca3: "TJK", … }
​
19: Object { cca2: "SY", ccn3: "760", cca3: "SYR", … }
​
20: Object { cca2: "GE", ccn3: "268", cca3: "GEO", … }
​
21: Object { cca2: "BT", ccn3: "064", cca3: "BTN", … }
​
22: Object { cca2: "VN", ccn3: "704", cca3: "VNM", … }
​
23: Object { cca2: "UZ", ccn3: "860", cca3: "UZB", … }
​
24: Object { cca2: "YE", ccn3: "887", cca3: "YEM", … }
​
25: Object { cca2: "KR", ccn3: "410", cca3: "KOR", … }
​
26: Object { cca2: "PK", ccn3: "586", cca3: "PAK", … }
​
27: Object { cca2: "AM", ccn3: "051", cca3: "ARM", … }
​
28: Object { cca2: "TM", ccn3: "795", cca3: "TKM", … }
​
29: Object { cca2: "LA", ccn3: "418", cca3: "LAO", … }
​
30: Object { cca2: "MN", ccn3: "496", cca3: "MNG", … }
​
31: Object { cca2: "NP", ccn3: "524", cca3: "NPL", … }
​
32: Object { cca2: "IQ", ccn3: "368", cca3: "IRQ", … }
​
33: Object { cca2: "TH", ccn3: "764", cca3: "THA", … }
​
34: Object { cca2: "SA", ccn3: "682", cca3: "SAU", … }
​
35: Object { cca2: "JO", ccn3: "400", cca3: "JOR", … }
​
36: Object { cca2: "LB", ccn3: "422", cca3: "LBN", … }
​
37: Object { cca2: "IR", ccn3: "364", cca3: "IRN", … }
​
38: Object { cca2: "PH", ccn3: "608", cca3: "PHL", … }
​
39: Object { cca2: "HK", ccn3: "344", cca3: "HKG", … }
​
40: Object { cca2: "MO", ccn3: "446", cca3: "MAC", … }
​
41: Object { cca2: "KP", ccn3: "408", cca3: "PRK", … }
​
42: Object { cca2: "MV", ccn3: "462", cca3: "MDV", … }
​
43: Object { cca2: "SG", ccn3: "702", cca3: "SGP", … }
​
44: Object { cca2: "QA", ccn3: "634", cca3: "QAT", … }
​
45: Object { cca2: "CN", ccn3: "156", cca3: "CHN", … }
​
46: Object { cca2: "PS", ccn3: "275", cca3: "PSE", … }
​
47: Object { cca2: "BD", ccn3: "050", cca3: "BGD", … }
​
48: Object { cca2: "TL", ccn3: "626", cca3: "TLS", … }
​
49: Object { cca2: "BN", ccn3: "096", cca3: "BRN", … }
​
---------------------------------------------------------------------------------------------------------------------------------------------------
2. Get all the countries with a population of less than 2 lakhs using Filter function

code:
// var XMLHttpRequest = require('xhr2');
var  request= new XMLHttpRequest();         //make a http request

request.open('GET','https://restcountries.com/v3.1/all');   //Open your request 

request.onload=function(){                              //onload event (server will listen to request and process data )
    let data =JSON.parse(request.responseText)
    let res= data.filter((d)=>{        
        return d.population < 200000            //filter population< 2 lakh
     })
    console.log(res)
}

request.send();             //send the request

Output -
Array(62) [ {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, … ]
​
0: Object { cca2: "PW", ccn3: "585", cca3: "PLW", … }
​
1: Object { cca2: "LI", ccn3: "438", cca3: "LIE", … }
​
2: Object { cca2: "TV", ccn3: "798", cca3: "TUV", … }
​
3: Object { cca2: "BL", ccn3: "652", cca3: "BLM", … }
​
4: Object { cca2: "LC", ccn3: "662", cca3: "LCA", … }
​
5: Object { cca2: "AW", ccn3: "533", cca3: "ABW", … }
​
6: Object { cca2: "GS", ccn3: "239", cca3: "SGS", … }
​
7: Object { cca2: "TC", ccn3: "796", cca3: "TCA", … }
​
8: Object { cca2: "FO", ccn3: "234", cca3: "FRO", … }
​
9: Object { cca2: "AQ", ccn3: "010", cca3: "ATA", … }
​
10: Object { cca2: "FM", ccn3: "583", cca3: "FSM", … }
​
11: Object { cca2: "WF", ccn3: "876", cca3: "WLF", … }
​
12: Object { cca2: "GI", ccn3: "292", cca3: "GIB", … }
​
13: Object { cca2: "BM", ccn3: "060", cca3: "BMU", … }
​
14: Object { cca2: "SH", ccn3: "654", cca3: "SHN", … }
​
15: Object { cca2: "AG", ccn3: "028", cca3: "ATG", … }
​
16: Object { cca2: "KY", ccn3: "136", cca3: "CYM", … }
​
17: Object { cca2: "BQ", ccn3: "535", cca3: "BES", … }
​
18: Object { cca2: "HM", ccn3: "334", cca3: "HMD", … }
​
19: Object { cca2: "CX", ccn3: "162", cca3: "CXR", … }
​
20: Object { cca2: "MS", ccn3: "500", cca3: "MSR", … }
​
21: Object { cca2: "NF", ccn3: "574", cca3: "NFK", … }
​
22: Object { cca2: "AS", ccn3: "016", cca3: "ASM", … }
​
23: Object { cca2: "GU", ccn3: "316", cca3: "GUM", … }
​
24: Object { cca2: "GD", ccn3: "308", cca3: "GRD", … }
​
25: Object { cca2: "SM", ccn3: "674", cca3: "SMR", … }
​
26: Object { cca2: "TO", ccn3: "776", cca3: "TON", … }
​
27: Object { cca2: "VG", ccn3: "092", cca3: "VGB", … }
​
28: Object { cca2: "KN", ccn3: "659", cca3: "KNA", … }
​
29: Object { cca2: "MH", ccn3: "584", cca3: "MHL", … }
​
30: Object { cca2: "AX", ccn3: "248", cca3: "ALA", … }
​
31: Object { cca2: "MC", ccn3: "492", cca3: "MCO", … }
​
32: Object { cca2: "IM", ccn3: "833", cca3: "IMN", … }
​
33: Object { cca2: "GG", ccn3: "831", cca3: "GGY", … }
​
34: Object { cca2: "PN", ccn3: "612", cca3: "PCN", … }
​
35: Object { cca2: "CK", ccn3: "184", cca3: "COK", … }
​
36: Object { cca2: "MF", ccn3: "663", cca3: "MAF", … }
​
37: Object { cca2: "AI", ccn3: "660", cca3: "AIA", … }
​
38: Object { cca2: "CC", ccn3: "166", cca3: "CCK", … }
​
39: Object { cca2: "VC", ccn3: "670", cca3: "VCT", … }
​
40: Object { cca2: "SC", ccn3: "690", cca3: "SYC", … }
​
41: Object { cca2: "PM", ccn3: "666", cca3: "SPM", … }
​
42: Object { cca2: "TK", ccn3: "772", cca3: "TKL", … }
​
43: Object { cca2: "FK", ccn3: "238", cca3: "FLK", … }
​
44: Object { cca2: "BV", ccn3: "074", cca3: "BVT", … }
​
45: Object { cca2: "AD", ccn3: "020", cca3: "AND", … }
​
46: Object { cca2: "NR", ccn3: "520", cca3: "NRU", … }
​
47: Object { cca2: "VI", ccn3: "850", cca3: "VIR", … }
​
48: Object { cca2: "DM", ccn3: "212", cca3: "DMA", … }
​
49: Object { cca2: "SX", ccn3: "534", cca3: "SXM", … }
​
50: Object { cca2: "NU", ccn3: "570", cca3: "NIU", … }
​
51: Object { cca2: "CW", ccn3: "531", cca3: "CUW", … }
​
52: Object { cca2: "VA", ccn3: "336", cca3: "VAT", … }
​
53: Object { cca2: "JE", ccn3: "832", cca3: "JEY", … }
​
54: Object { cca2: "WS", ccn3: "882", cca3: "WSM", … }
​
55: Object { cca2: "IO", ccn3: "086", cca3: "IOT", … }
​
56: Object { cca2: "TF", ccn3: "260", cca3: "ATF", … }
​
57: Object { cca2: "SJ", ccn3: "744", cca3: "SJM", … }
​
58: Object { cca2: "UM", ccn3: "581", cca3: "UMI", … }
​
59: Object { cca2: "MP", ccn3: "580", cca3: "MNP", … }
​
60: Object { cca2: "GL", ccn3: "304", cca3: "GRL", … }
​
61: Object { cca2: "KI", ccn3: "296", cca3: "KIR", … }
​
---------------------------------------------------------------------------------------------------------------------------------------------------

3. Print the following details name, capital, flag using forEach function:

code:
var  request= new XMLHttpRequest();         //make a http request

request.open('GET','https://restcountries.com/v3.1/all');   //Open your request 

request.onload=function(){                              //onload event (server will listen to request and process data )
    let data =JSON.parse(request.responseText)
    let res= data.forEach((d)=>{        
        for (let key in data){
            console.log(`
            Name: ${data[key].name.common}
            Region: ${data[key].region}
            Subregion: ${data[key].subregion}
            Population: ${data[key].population}`)
        }      //filter population< 2 lakh
     })
    console.log(res)
}

request.send();             //send the request


Output:
Name: United States Minor Outlying Islands
            Region: Americas
            Subregion: North America
            Population: 300 MRF.js:10:21

            Name: Northern Mariana Islands
            Region: Oceania
            Subregion: Micronesia
            Population: 57557 MRF.js:10:21

            Name: Palestine
            Region: Asia
            Subregion: Western Asia
            Population: 4803269 MRF.js:10:21

            Name: Greenland
            Region: Americas
            Subregion: North America
            Population: 56367            ....So on
---------------------------------------------------------------------------------------------------------------------------------------------------
4. Print the total population of countries using reduce function

code -
var  request= new XMLHttpRequest();         //make a http request

request.open('GET','https://restcountries.com/v3.1/all');   //Open your request 

request.onload=function(){                              //onload event (server will listen to request and process data )
    let data =JSON.parse(request.responseText)
    let res= data.reduce((prev,curr)=> {
        return prev+curr.population
    },0)
    console.log(res)
}

request.send();             //send the request

Output-
7777721563
---------------------------------------------------------------------------------------------------------------------------------------------------

5. Print the country which uses US Dollars as currency.
var  request= new XMLHttpRequest();         //make a http request

request.open('GET','https://restcountries.com/v3.1/all');   //Open your request 

request.onload=function(){                              //onload event (server will listen to request and process data )
    let data =JSON.parse(request.responseText)
    for (i=0; i<data.length; i++){
        if(data[i].currencies[0].code=="USD"){
              console.log(data[i].name)
        }
    }
}
request.send();             //send the request

Output:
0: "American Samoa"
1: "Bonaire, Sint Eustatius and Saba"
2: "British Indian Ocean Territory"
3: "United States Minor Outlying Islands"
4: "Virgin Islands (British)"
5: "Virgin Islands (U.S.)"
6: "Cambodia"
7: "Ecuador"
8: "El Salvador"
9: "Guam"
10: "Marshall Islands"
11: "Micronesia (Federated States of)"
12: "Northern Mariana Islands"
13: "Palau"
14: "Panama"
15: "Puerto Rico"
16: "Timor-Leste"
17: "Turks and Caicos Islands"
18: "United States of America"
19: "Zimbabwe"

